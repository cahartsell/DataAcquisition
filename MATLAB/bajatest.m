% CHARLES HARTSELL
% UNIVERSITY OF ALABAMA SAE BAJA TEAM (BAMA RACING)
% JAN 26 2016
%
% TEST FUNCTION FOR USE WITH LOG FILES GENERATED BY VEHICLE MICROCONTROLLER
% PLOTS VEHICLE SPEED, ENGINE RPM, AND CVT RATIO
% DETERMINES AND PLOTS AN IDEAL CVT RATIO TO MAINTAIN THE TARGET_ENGINE_RPM

function [] = bajatest(dataFileName)

MAX_ENGINE_RPM = 3800;
TARGET_ENGINE_RPM = 3600;
DANA_RATIO = 13.0;
MAX_CVT_RATIO = 3;
MIN_CVT_RATIO = 0.56;


% Open and read .txt file from OpenLog, then close file
dataFileName = strcat(dataFileName,'.txt');
dataFP = fopen(dataFileName);
dataCell = textscan(dataFP,'%f %f %f %f','CommentStyle','//');
fclose(dataFP);

timeArray = dataCell{1};
speedArray = dataCell{2};
engineRPM = dataCell{3};
axleRPM = dataCell{4};

% axleRPM data is stored in .txt as fixed point scaled up by 1000
% Scale down to true value
axleRPM = axleRPM/1000;

% Adjust time to be relative to start of data file
% Convert from milliseconds to seconds
startTime = timeArray(1);
adjustedTime = (timeArray-startTime)/1000;

X_AXIS_MIN = adjustedTime(1);
X_AXIS_MAX = adjustedTime(end);

% Calculate CVT Ratio
% Causes some INF entries due to divide by 0, but MATLAB handles it fine
cvtRatio = (engineRPM./axleRPM)/DANA_RATIO;

% Calculate Ideal CVT Ratio
% Make resulting idealEngineRPM array
targetRPM(1:size(timeArray)) = TARGET_ENGINE_RPM;
targetRPM = targetRPM';
idealEngineRPM = targetRPM;
idealCVTRatio = (targetRPM./axleRPM)/DANA_RATIO;
for i = 1:size(idealCVTRatio)
    if(idealCVTRatio(i) > MAX_CVT_RATIO)
        idealCVTRatio(i) = MAX_CVT_RATIO;
    end
    if(idealCVTRatio(i) < MIN_CVT_RATIO)
        idealCVTRatio(i) = MIN_CVT_RATIO;
    end
    if(speedArray(i) == 0)
        idealCVTRatio(i) = NaN;
        idealEngineRPM(i) = engineRPM(i);
    end
end


% Make plots
figure();
subplot(3,1,1);
plot(adjustedTime, speedArray, 'LineWidth', 2);
grid on;
title('SPEED', 'FontWeight', 'bold', 'FontSize', 12);
ylabel('Speed (MPH)');
axis([X_AXIS_MIN X_AXIS_MAX 0 inf]);

subplot(3,1,2);
hold on;
plot(adjustedTime, idealEngineRPM, 'LineWidth', 2, 'color', 'm');
plot(adjustedTime, engineRPM, 'LineWidth', 2);
plot([adjustedTime(1) adjustedTime(end)], [MAX_ENGINE_RPM MAX_ENGINE_RPM], 'color', 'r');
axis([X_AXIS_MIN X_AXIS_MAX 0 MAX_ENGINE_RPM+200]);
grid on;
title('ENGINE RPM', 'FontWeight', 'bold', 'FontSize', 12);
ylabel('Engine RPM');

subplot(3,1,3);
hold on
plot(adjustedTime, idealCVTRatio, 'LineWidth', 2, 'color', 'm');
plot(adjustedTime, cvtRatio, 'LineWidth', 2);
plot([adjustedTime(1) adjustedTime(end)], [MAX_CVT_RATIO MAX_CVT_RATIO], 'color', 'r');
plot([adjustedTime(1) adjustedTime(end)], [MIN_CVT_RATIO MIN_CVT_RATIO], 'color', 'k');
axis([X_AXIS_MIN X_AXIS_MAX 0 MAX_CVT_RATIO+0.5]);
grid on;
title('CVT RATIO', 'FontWeight', 'bold', 'FontSize', 12);
xlabel('Time (s)');
ylabel('CVT Ratio');

end